////////////////////////////////////////////////////////////////////////////////
// Filename: PacketResourceDeleter.h
////////////////////////////////////////////////////////////////////////////////
#pragma once

//////////////
// INCLUDES //
//////////////
#include "..\PacketConfig.h"

#include <thread>

///////////////
// NAMESPACE //
///////////////

/////////////
// DEFINES //
/////////////

////////////
// GLOBAL //
////////////

///////////////
// NAMESPACE //
///////////////

// Packet
PacketDevelopmentNamespaceBegin(Packet)

//////////////
// TYPEDEFS //
//////////////

////////////////
// FORWARDING //
////////////////

// Classes we know
class PacketResourceFactory;
class PacketResource;

////////////////////////////////////////////////////////////////////////////////
// Class name: PacketResourceDeleter
////////////////////////////////////////////////////////////////////////////////
class PacketResourceDeleter
{

//////////////////
// CONSTRUCTORS //
public: //////////

	// Constructor / destructor
	PacketResourceDeleter();
	~PacketResourceDeleter();

//////////////////
// MAIN METHODS //
public: //////////

	// Load a new object
	bool DeleteObject(std::unique_ptr<PacketResource> _object, PacketResourceFactory* _factoryPtr) const;

///////////////
// VARIABLES //
private: //////

};

// Packet
PacketDevelopmentNamespaceEnd(Packet)
